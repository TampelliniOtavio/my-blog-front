---
import { actions } from "astro:actions";
import { useTranslations } from "@/i18n/utils";
import Layout from "@/layouts/Layout.astro";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button, buttonVariants } from "@/components/ui/button";
import type { TranslationKeys } from "@/i18n/ui";
import {
    Card,
    CardContent,
    CardFooter,
    CardHeader,
    CardTitle,
} from "@/components/ui/card";
import { getAuth } from "@/lib/auth";

const isAuthenticated = (await getAuth(Astro.cookies)) !== undefined;

if (isAuthenticated) {
    return Astro.redirect("/");
}

const translation = useTranslations(Astro.url);

const { t } = translation;

const result = Astro.getActionResult(actions.auth.signinUser);

if (result && !result.error) {
    return Astro.redirect(`/${translation.lang}/login`);
}
---

<Layout
    title={t("signin.title")}
    description={t("signin.description")}
    noNavbar
>
    <div class="flex justify-center w-full h-full place-items-center">
        <Card className="h-fit">
            <form method="post" action={actions.auth.signinUser}>
                <CardHeader>
                    <CardTitle>{t("signin.card.title")}</CardTitle>
                </CardHeader>
                <CardContent>
                    <Label>
                        {t("login.username.label")}
                        <Input
                            type="text"
                            name="username"
                            autoComplete="username"
                            required
                        />
                    </Label>
                    <Label>
                        {t("login.password.label")}
                        <Input
                            type="password"
                            name="password"
                            autoComplete="current-password"
                            required
                        />
                    </Label>
                    <Label>
                        {t("signin.email.label")}
                        <Input
                            type="email"
                            name="email"
                            autoComplete="email"
                            required
                        />
                    </Label>
                    {
                        result?.error?.message && (
                            <p class="text-red-400">
                                {t(result?.error?.message as TranslationKeys)}
                            </p>
                        )
                    }
                </CardContent>
                <CardFooter className="flex justify-between">
                    <Button type="submit">{t("signin.submitButton")}</Button>
                    <a href="/" class={buttonVariants({ variant: "outline" })}
                        >{t("signin.cancelButton")}</a
                    >
                </CardFooter>
            </form>
        </Card>
    </div>
</Layout>
