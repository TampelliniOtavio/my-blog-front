---
import BaseHeaders from "@/components/BaseHeaders.astro";
import { useTranslations } from "@/i18n/utils";

interface Props {
    title: string;
    description?: string;
    image?: string;
}

const { lang } = useTranslations(Astro.url);

const langFormatted = lang.replace(/-[a-z]{2}/, (match) => match.toUpperCase());

const { title, description = "", image } = Astro.props;
---

<!doctype html>
<html lang={langFormatted} class="w-screen h-screen">
    <head>
        <BaseHeaders title={title} description={description} image={image} />
    </head>
    <body class="w-full h-full overflow-auto">
        <slot />
    </body>
</html>

<script is:inline>
    const getThemePreference = () => {
        if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
        ) {
            return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ["class"],
        });
    }
</script>
